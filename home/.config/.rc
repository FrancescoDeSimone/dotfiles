export EDITOR='nvim'
export PASSWORD_STORE_DIR=$HOME/.config/.password-store
export PASSWORD_STORE_X_SELECTION=clipboard
export PATH="${HOME}/.local/bin:$PATH"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
export XSERVERRC="$XDG_CONFIG_HOME"/X11/xserverrc
export LESSHISTFILE=/dev/null
export MANPAGER="sh -c 'col -bx | bat -l man -p --paging always'"
#emacs mode
bindkey -e
# alias
alias dive="docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive"
alias dd="dd status=progress"
alias drop="dragon-drop -t"
alias drag="dragon-drop"
alias v="nvim"
alias vi="nvim"
alias vim="nvim"
alias vimdiff="nvim -d"
alias tb="nc termbin.com 9999"
alias aringa="| curl -LF \"aringa=<-\" --post301 arin.ga"
alias cal="cal -3"
alias make="make -j$(nproc)"
alias ls="ls -F --color"
alias ll="ls -F -lh"
alias la="ls -F -lha"
alias pip install='pip install --user'
alias fd="fd -j$(nproc)"
alias ssh="TERM=xterm-256color ssh"
alias ytdl="yt-dlp"

getclip(){ 
    [ -n $WAYLAND_DISPLAY ] 
        && wl-paste 
        || xclip -selection c -o
}

setclip(){ 
    [ -n $WAYLAND_DISPLAY ] 
        && wl-copy 
        || xclip -selection c
}

transfer() {
  curl --progress-bar --upload-file "$1" https://transfer.sh/$(basename $1) | tee /dev/null;
}

x0(){
  curl -F "file=@$@" https://x0.at/
}

cheat() {
  curl cheat.sh/$1
}

mkcd (){
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

groffpdf(){
   groff -ms $1 -T pdf $1.pdf
}

sprung() {
  curl -F "sprunge=<-" http://sprunge.us ;
}

ix.io(){ curl -F 'f:1=<-' ix.io; }

openn() {
  if [ "$#" -lt 1 ]; then
    echo "You must enter 1 or more command line arguments";
  elif [ "$#" -eq 1 ]; then
    xdg-open "$1" > /dev/null & disown;
  else
    for file in "$@"; do
      xdg-open "$file" > /dev/null & disown;
    done
  fi
}

fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi
}

fman() {
    man -k . | \
    fzf -q "$1" --prompt='man> ' \
    --preview $'echo {} | tr -d \'()\' | \
                awk \'{printf "%s ", $2} {print $1}\' | \
                xargs -r man | col -bx | bat -l man -p --color always' |\
                tr -d '()' | awk '{printf "%s ", $2} {print $1}' | xargs -r man
}

app-list(){
    OS_NAME="$(cat /etc/os-release | awk -F= '/^NAME/ {print $2}' | tr -d "\"")"
    [ "${OS_NAME}" = 'Arch Linux' ] \
        && pacman -Qeq | fzf --multi --preview 'pacman -Qi {1}'
    [ "${OS_NAME}" = 'Ubuntu' ] \
       && dpkg --list | awk 'NR>5 {print $2}' | fzf --multi --preview 'dpkg --status {1}'
}

da() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}

drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}

drm() {
  docker ps -a | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $1 }' | xargs -r docker rm
}

drmi() {
  docker images | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $3 }' | xargs -r docker rmi
}

fyay() {
    yay -Slq | fzf -q "$1" -m --preview 'yay -Si {1}'| xargs -ro yay -S
}
